# This file contains mostly build definitions. Ports, env files and dependencies have no place because this file would be used for release
# or test configurations.
# Volumes shouldn't either, but we're making a compromise for DRY-ness.
services:
  mc:
    image: memcached:1@sha256:1d21225e718231ce785656df8da44b33d4237c0d10cfeac174c81f687925afbe

  redis:
    image: redis:8@sha256:d7d4d31df9dab3b23c2e2e0731cdf44d2ccdb51e08f8d932e7dfff8aa0b8fa54

  pg:
    build:
      context: docker/postgres
    shm_size: 4g
    command: [
      'postgres',
      '-c', 'log_lock_waits=true',
      '-c', 'log_min_error_statement=WARNING',
      '-c', 'log_min_duration_statement=1s',

      # debug
#      '-c', 'log_statement=all',
#      '-c', 'log_duration=true',
#      '-c', 'log_disconnections=true',
#      '-c', 'log_connections=true',

      # tuning
      '-c', 'max_wal_size=10GB',
      '-c', 'work_mem=4GB',
      '-c', 'checkpoint_timeout=1h',
      '-c', 'shared_buffers=1GB',
      '-c', 'autovacuum=false',
      '-c', 'maintenance_work_mem=1GB',

      # danger
#      '-c', 'full_page_writes=off',
#      '-c', 'wal_level=minimal',
#      '-c', 'max_wal_senders=0',
#      '-c', 'fsync=off',
#      '-c', 'synchronous_commit=off',
    ]

#  pgupgrade:
#    image: pgautoupgrade/pgautoupgrade:18-trixie
#    environment:
#      POSTGRES_PASSWORD: app
#      PGAUTO_ONESHOT: yes

  python:
    build:
      context: docker/python
      additional_contexts:
        requirements-context: requirements
        src-context: src
      args:
        DJANGO_COLLECTSTATIC:
        DJANGO_SETTINGS_MODULE:
        REQUIREMENTS: base
        SERVER_NAME:
    environment:
      PYTHONHUNTER:
      PYTHONHUNTERCONFIG:
      DJANGO_DEBUG:
      DJANGO_DEBUG_SQL:
      DJANGO_DEBUG_SQL_LIMIT:
      DJANGO_DEBUG_TOOLBAR:
      DJANGO_SILK:
      LOGGING_LEVEL:
      LOGGING_PATH:
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT:-4G}
    cap_add:
      - SYS_PTRACE
    ulimits:
      nproc: 16384
      nofile:
        soft: 65536
        hard: 262144
    volumes:
      - .:/app
      - ./.home:/root
      - ./.home:/home/app
      - ./.home:/var/app
    init: true

  worker:
    extends:
      service: python
    deploy:
      replicas: 2
    command: [
      'pysu', 'app', '--',
      'django-admin', 'rqworker'
    ]

  reloader:
    build:
      context: docker/reloader
    environment:
      RELOADER_MONITOR:
      RELOADER_CONTAINERS:
      COMPOSE_PROJECT_NAME:
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.home/run:/var/app/run
    ulimits:
      nproc: 16384
      nofile:
        soft: 65536
        hard: 262144
