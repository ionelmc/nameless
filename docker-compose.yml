version: '3.7'

x-python:
  &python
  build:
    context: .
    dockerfile: docker/python/Dockerfile
    args:
      REQUIREMENTS: base
      DJANGO_SETTINGS_MODULE:
      DJANGO_COLLECTSTATIC: x
  environment:
    PYTHONHUNTER:
    PYTHONHUNTERCONFIG:
    DJANGO_DEBUG:
    DJANGO_DEBUG_SQL:
    DJANGO_DEBUG_SQL_LIMIT:
    DJANGO_DEBUG_TOOLBAR:
  env_file:
    - .env
  tty: false
  volumes:
    - .:/app
    - ./.home:/root
    - ./.home:/home/app
    - ./.home:/var/app
    - ./.home/etc:/etc/app
services:
  pg:
    build:
      context: docker/postgres
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    command: [
      'postgres',
      '-c', 'log_lock_waits=true',
      '-c', 'log_min_error_statement=WARNING',
      '-c', 'log_min_duration_statement=1s',
    ]
    volumes:
      - .:/app
      - ./.home:/root

  mc:
    image: memcached:1@sha256:1c1de15596b046d3127962c21457a0f791b448149890df667713cbd58e6ff8d9

  redis:
    image: redis:7@sha256:aeed51f49a6331df0cb2c1039ae3d1d70d882be3f48bde75cd240452a2348e88

  cron:
    <<: *python
    depends_on:
      - pg
    entrypoint: [ '/entrypoint.sh' ]
    command: [ 'pysu', 'app', 'yacron', '--config=/etc/app/yacron.yml' ]

  web:
    <<: *python
    depends_on:
      - pg
      - mc
      - redis
    entrypoint: [ '/entrypoint.sh' ]

  worker:
    <<: *python
    entrypoint: [ '/entrypoint.sh' ]
    command: [ 'pysu', 'app', 'django-admin', 'rqworker' ]
    depends_on:
      - pg
      - redis
    deploy:
      replicas: 2
